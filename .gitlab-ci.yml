---

include:
  - project: 'python/packaging'
    ref: main
    file: 'gitlab/create-all.yaml'

# ---------------------------
# Global variables
variables:
  # DEBFULLNAME: 'Frank Brehm'
  # DEBEMAIL: 'frank@brehm-online.com'
  EXPIRE_ARTIFACTS_IN: '1 week'
  # FB_REPOSERVER_URL: 'http://repo.uhu-banane.de'
  # FB_REPOSERVER_GPGKEY_URL: 'http://repo.uhu-banane.de/public/repo.uhu-banane.de.gpg-key2.asc'
  # NOTIFY_ADDRESS: 'frank.brehm@pixelpark.com'
  PKG_NAME: 'fb_logging'
  PYTHON_INIT_FILE: 'lib/fb_logging/__init__.py'
  PYTHON_TEST_PATHS: 'bin lib setup.py'
  # SENDER_ADDRESS: 'gitlab-ci@pixelpark.com'
  SHELLSCRIPTS: 'get-debian-version get-rpm-release get-rpm-version'
  SSH_PRIV_KEY_YUM_REPO: 'nada'
  TEST_LOCALES: 'en_US.UTF-8'
  UPDATE_ALL_PIP_MODULES: 'y'
  USED_SSH_PRIV_KEY_YUM_REPO: "${SSH_PRIV_KEY_YUM_REPO}"
  USED_YUM_REPO_GPG_PASSWD: "${YUM_REPO_GPG_PASSWD}"
  USED_YUM_REPO_GPG_KEY_PUB: "${YUM_REPO_GPG_KEY_PUB}"
  USED_YUM_REPO_GPG_KEY_SEC: "${YUM_REPO_GPG_KEY_SEC}"
  USED_TIMEZONE: 'Europe/Berlin'
  # VERSION_PREFIX: 'unknown'
  YUM_REPO_GPG_ID: 'C0E73F70'
  YUM_REPO_GPG_PASSWD: ''
  YUM_REPO_HOST: 'repo02.pixelpark.com'
  YUM_REPO_USER: 'rpm-repo'
  YUM_REPO_DIR_HTTP: '/Linux/yum/pixelpark'
  YUM_REPO_DIR: "/srv/www/repo${YUM_REPO_DIR_HTTP}"
  YUM_REPO_GPG_KEY_PUB: 'nada'
  YUM_REPO_GPG_KEY_SEC: ''

# # ---------------------------
# .rpm-pkg-deploy:
#   rules:
#     - if: '$CI_COMMIT_TAG'
#       when: manual
#       allow_failure: true
#   stage: deploy
#   tags:
#     - deploy_v2
#   before_script:
#     - hostname -f
#     - whoami
#     - pwd
#     - ls -lA --color=always
#     - find rpmdir/*RPMS -type f -print0 | xargs --null --no-run-if-empty ls -l -d --color=always
#     - 'echo -e "YUM_REPO_USER: ${YUM_REPO_USER}"'
#     - 'echo -e "YUM_REPO_HOST: ${YUM_REPO_HOST}"'
#     - 'echo -e "YUM_REPO_DIR: ${YUM_REPO_DIR}"'
#     - 'mkdir -pv "${HOME}/.ssh"'
#     - 'chmod -v 0700 "${HOME}/.ssh"'
#     - '/bin/echo "${SSH_PRIV_KEY_YUM_REPO}" > "${HOME}/.ssh/id_rsa"'
#     - 'chmod -v 0600 "${HOME}/.ssh/id_rsa"'
#     - 'ls -lA --color=always "${HOME}/.ssh"'
#     - |
#       if [[ -f "${HOME}/.ssh/config" ]] ; then
#         echo "Content of ${HOME}/.ssh/config:"
#         cat "${HOME}/.ssh/config"
#         echo
#       fi
#   script:
#     - echo "Packages to deploy:"; find rpmdir/*RPMS -type f -print0 | xargs --null --no-run-if-empty ls -l -d --color=always
#     - |
#       src_repo_dir="${YUM_REPO_DIR}/${EL_MAJOR_VERSION}-src"
#       echo "Deploying source packages to ${YUM_REPO_HOST}:${src_repo_dir}/ ..."
#       ssh -o StrictHostKeyChecking=no "${YUM_REPO_USER}@${YUM_REPO_HOST}" "if [ ! -d ${src_repo_dir} ] ; then mkdir -pv ${src_repo_dir} ; fi"
#       scp -p -o StrictHostKeyChecking=no rpmdir/SRPMS/*.rpm "${YUM_REPO_USER}@${YUM_REPO_HOST}:${src_repo_dir}/"
#       ssh -o StrictHostKeyChecking=no "${YUM_REPO_USER}@${YUM_REPO_HOST}" "cd ${src_repo_dir}/ && createrepo --update . && chmod -v a+x repodata && chmod -Rv a+r repodata"
#     - |
#       bin_repo_dir="${YUM_REPO_DIR}/${EL_MAJOR_VERSION}"
#       echo "Deploying binary packages to ${YUM_REPO_HOST}:${bin_repo_dir}/ ..."
#       ssh -o StrictHostKeyChecking=no "${YUM_REPO_USER}@${YUM_REPO_HOST}" "if [ ! -d ${bin_repo_dir} ] ; then mkdir -pv ${bin_repo_dir} ; fi"
#       scp -p -o StrictHostKeyChecking=no rpmdir/RPMS/*/*.rpm "${YUM_REPO_USER}@${YUM_REPO_HOST}:${bin_repo_dir}/"
#       ssh -o StrictHostKeyChecking=no "${YUM_REPO_USER}@${YUM_REPO_HOST}" "cd ${bin_repo_dir}/ && createrepo --update . && chmod -v a+x repodata && chmod -Rv a+r repodata"
#   after_script:
#     - rm -rf rpmdir
#   environment:
#     name: production

# # ---------------------------
# Deploy packages EL7:
#   extends:
#     - '.rpm-pkg-deploy'
#   variables:
#     EL_MAJOR_VERSION: '7'
#   needs:
#     - 'Sign EL 7 packages'
#   dependencies:
#     - 'Sign EL 7 packages'

# # ---------------------------
# Deploy packages EL8:
#   extends:
#     - '.rpm-pkg-deploy'
#   variables:
#     EL_MAJOR_VERSION: '8'
#   needs:
#     - 'Sign EL 8 packages'
#   dependencies:
#     - 'Sign EL 8 packages'

# # ---------------------------
# Deploy packages EL9:
#   extends:
#     - '.rpm-pkg-deploy'
#   variables:
#     EL_MAJOR_VERSION: '9'
#   needs:
#     - 'Sign EL 9 packages'
#   dependencies:
#     - 'Sign EL 9 packages'

# vim: et tabstop=2 expandtab shiftwidth=2 softtabstop=2 list
